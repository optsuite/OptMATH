{
    "subclass": "Knapsack",
    "reference":"Martello, Silvano and Paolo Toth. “Knapsack Problems: Algorithms and Computer Implementations.” (1990).",
    "reference_url": "https://dl.acm.org/doi/abs/10.5555/98124",
    "math_formula": "### Mathematical Model\nSuppose there are m items, each item j (where j = 1, 2, ..., m) has the following attributes:\n- **Value** c_j: The value of item j.\n- **Weight** w_j: The weight of item j.\n- **Selection Variable** x_j: A binary variable indicating whether item j is selected.\n- x_j = 1: Item j is selected.\n- x_j = 0: Item j is not selected.\n\nAdditionally, the knapsack has a maximum weight capacity denoted by the constant K.\n$$\n\\begin{aligned}\n&\\text{Maximize} && \\sum_{j=1}^m c_j x_j \\\\\n&\\text{Subject to} && \\sum_{j=1}^m w_j x_j \\leq K \\\\\n& && x_j \\in \\{0, 1\\} \\quad \\forall j = 1, 2, \\ldots, m\n\\end{aligned}\n$$",
    "natural_language_example": "A hiker is preparing for a 3-day outdoor hiking trip. They need to select the most valuable combination of equipment and supplies from many available options within the limited backpack capacity. The items include:\n* Tent: weight 5kg, value 90 points\n* Sleeping bag: weight 3kg, value 80 points\n* Portable stove: weight 1kg, value 60 points\n* Drinking water: weight 2kg, value 70 points\n* Dry food: weight 1.5kg, value 65 points\n* First aid kit: weight 0.5kg, value 50 points\nAssuming the backpack has a maximum weight capacity of 10kg, the hiker's goal is to select the combination of items with the highest total value while not exceeding the weight limit. Each item must be either taken in its entirety or left behind; partial items cannot be taken."
}