{
    "subclass": "Jop Shop",
    "reference":"Martello, Silvano and Paolo Toth. “Knapsack Problems: Algorithms and Computer Implementations.” (1990).",
    "reference_url": "https://dl.acm.org/doi/abs/10.5555/98124",
    "math_formula": "### Mathematical Model\n \\begin{align*}\n\\text{Minimize} \\quad & C_{\\text{max}} \\\\\n\\text{Subject to} \\quad &\n\\begin{cases}\nS_{j,i+1} \\geq S_{j,i} + p_{j,i} & \\forall j \\in J, \\forall i \\in O_j \\text{ except last operation} \\\\\nS_{j,i} + p_{j,i} \\leq S_{k,l} + N \\cdot (1 - X_{j,i,k}) & \\forall \\text{ operations } (j,i), (k,l) \\text{ on same machine} \\\\\nS_{k,l} + p_{k,l} \\leq S_{j,i} + N \\cdot X_{j,i,k} & \\forall \\text{ operations } (j,i), (k,l) \\text{ on same machine} \\\\\nC_{\\text{max}} \\geq S_{j,i} + p_{j,i} & \\forall j \\in J, \\forall i \\in O_j \\\\\nS_{j,i} \\geq 0 & \\forall j \\in J, \\forall i \\in O_j \\\\\nX_{j,i,k} \\in \\{0,1\\} & \\forall \\text{ relevant operation pairs } (j,i), (k,l)\n\\end{cases}\n\\end{align*} \n **Explanation of the Formulation** 1. **Precedence Constraints within Jobs**\n   $$\n   S_{j,i+1} \\geq S_{j,i} + p_{j,i} \\quad \\forall j \\in J, \\forall i \\in O_j \\text{ except last operation}\n   $$\n   Ensures that each operation starts only after the previous one in the same job has completed.\n2. **Machine Capacity Constraints**\n   For all pairs of operations $$ (j,i) $$ and $$ (k,l) $$ that are assigned to the same machine $$ m $$:\n   $$\n   S_{j,i} + p_{j,i} \\leq S_{k,l} + N \\cdot (1 - X_{j,i,k})\n   $$\n   $$\n   S_{k,l} + p_{k,l} \\leq S_{j,i} + N \\cdot X_{j,i,k}\n   $$\n   These constraints ensure that two operations assigned to the same machine do not overlap in time. The binary variable $$ X_{j,i,k} $$ determines the order of operations on the machine.\n3. **Makespan Definition**\n   $$\n   C_{\\text{max}} \\geq S_{j,i} + p_{j,i} \\quad \\forall j \\in J, \\forall i \\in O_j\n   $$\n   Ensures that the makespan is at least as large as the completion time of every operation.\n4. **Non-Negativity Constraints**\n   $$\n   S_{j,i} \\geq 0 \\quad \\forall j \\in J, \\forall i \\in O_j\n   $$\n5. **Binary Variable Definition**\n   $$\n   X_{j,i,k} \\in \\{0,1\\} \\quad \\forall \\text{ relevant operation pairs } (j,i), (k,l)\n   $$",
    "natural_language_example": "Suppose there are n jobs have to processed on m machines, and them should meet the following facts: - For each job j (j = 1, 2, 3, ..., n) has k operations need to be processed on specific machines. - An operation can be processed on only one machine and cannot be interrupted. - The operations processing order of a job is given according to the job. - An machine can process only one operation at a time. - We have to determine the processing order of the operations on the machines to minimize the total processing time(makespan)."
}